#!/bin/sh
#SBATCH --account project_2003104
#SBATCH --partition small
#SBATCH --job-name={{ job_name }}
#SBATCH --output={{ log_file | worker-%A_%a.out }}
#SBATCH --error={{ log_file | worker-%A_%a.out }}
#SBATCH --mem-per-cpu={{ memory | 8192 }}
#SBATCH --array=1-{{ n_jobs }}
#SBATCH --cpus-per-task={{ cores | 1 }}
#SBATCH --ntasks=1
#SBATCH --time={{ time | 1:00:00 }}
#SBATCH --gres=nvme:{{ temp_space | 10 }}

export CMQ_AUTH={{ auth }}
export OMP_STACKSIZE=8096
export OMP_THREAD_LIMIT=$SLURM_CPUS_ON_NODE
mkdir -p "userdir"

SINGULARITY_BIND="$(realpath $(pwd)/sh_matching_pub/sh_matching_analysis/scripts):/sh_matching/scripts"
SINGULARITY_BIND="${SINGULARITY_BIND},$(realpath $(pwd)/sh_matching_pub/sh_matching_analysis/readme.txt):/sh_matching/readme.txt"
SINGULARITY_BIND="${SINGULARITY_BIND},$(realpath $(pwd)/data/sh_matching_data):/sh_matching/data"
SINGULARITY_BIND="${SINGULARITY_BIND},$(realpath $(pwd)/bin):/sh_matching/programs"
if [ -d "$LOCAL_SCRATCH" ] ; then
  echo "found local scratch at $LOCAL_SCRATCH"
  export TMPDIR=$LOCAL_SCRATCH
  SINGULARITY_BIND="${SINGULARITY_BIND},$(realpath ${LOCAL_SCRATCH}):$(pwd)/userdir"
fi
export SINGULARITY_BIND
echo "binding: $SINGULARITY_BIND"
export PATH="$(realpath $(pwd)/conda/deadwood_restoration/bin):$PATH"
R --vanilla -e 'clustermq:::worker("{{ master }}")'
